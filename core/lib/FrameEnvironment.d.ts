import { ILoadStatus, ILocationTrigger } from '@ulixee/unblocked-specification/agent/browser/Location';
import { IJsPath, INodePointer } from '@ulixee/js-path';
import { ICookie } from '@ulixee/unblocked-specification/agent/net/ICookie';
import { IInteractionGroups, IInteractionStep } from '@ulixee/unblocked-specification/agent/interact/IInteractions';
import IExecJsPathResult from '@ulixee/unblocked-specification/agent/browser/IExecJsPathResult';
import { IRequestInit } from '@ulixee/awaited-dom/base/interfaces/official';
import ISetCookieOptions from '@ulixee/hero-interfaces/ISetCookieOptions';
import { IBoundLog } from '@ulixee/commons/interfaces/ILog';
import IWaitForOptions from '@ulixee/hero-interfaces/IWaitForOptions';
import IFrameMeta from '@ulixee/hero-interfaces/IFrameMeta';
import INavigation from '@ulixee/unblocked-specification/agent/browser/INavigation';
import { TypedEventEmitter } from '@ulixee/commons/lib/eventUtils';
import IDomStateAssertionBatch from '@ulixee/hero-interfaces/IDomStateAssertionBatch';
import IDetachedElement from '@ulixee/hero-interfaces/IDetachedElement';
import { ISerializable } from '@ulixee/unblocked-agent/lib/JsPath';
import Frame from '@ulixee/unblocked-agent/lib/Frame';
import FrameNavigations from '@ulixee/unblocked-agent/lib/FrameNavigations';
import IResourceMeta from '@ulixee/unblocked-specification/agent/net/IResourceMeta';
import Session from './Session';
import Tab from './Tab';
import { PageRecorderResultSet } from '../injected-scripts/pageEventsRecorder';
import { ICommandableTarget } from './CommandRunner';
import { IRemoteEmitFn, IRemoteEventListener } from '../interfaces/IRemoteEventListener';
export default class FrameEnvironment extends TypedEventEmitter<{
    paint: void;
}> implements ICommandableTarget, IRemoteEventListener {
    get session(): Session;
    get devtoolsFrameId(): string;
    get parentId(): number;
    get parentFrame(): FrameEnvironment | null;
    get isAttached(): boolean;
    get securityOrigin(): string;
    get childFrameEnvironments(): FrameEnvironment[];
    get isMainFrame(): boolean;
    get navigations(): FrameNavigations;
    get id(): number;
    readonly tab: Tab;
    readonly createdTime: Date;
    readonly createdAtCommandId: number;
    frame: Frame;
    isReady: Promise<Error | void>;
    domNodeId: number;
    protected readonly logger: IBoundLog;
    private events;
    private isClosing;
    private readonly commandRecorder;
    private readonly filePathsToClean;
    private lastDomChangeDocumentNavigationId;
    private lastDomChangeTimestamp;
    private isTrackingMouse;
    private flushPageEventsRecorderResolvers;
    private readonly installedDomAssertions;
    get url(): string;
    constructor(tab: Tab, frame: Frame);
    isAllowedCommand(method: string): boolean;
    close(): void;
    setInteractionDisplay(followMouseMoves: boolean, hideMouse?: boolean, hideHighlightedNodes?: boolean): void;
    afterInteractionGroups(): Promise<void>;
    afterEachInteractionStep(interaction: IInteractionStep, startTime: number): Promise<void>;
    beforeEachInteractionStep(interaction: IInteractionStep, isMouseCommand: boolean): Promise<void>;
    interact(...interactionGroups: IInteractionGroups): Promise<void>;
    getJsValue<T>(expression: string): Promise<T>;
    execJsPath<T>(jsPath: IJsPath): Promise<IExecJsPathResult<T>>;
    meta(): Promise<IFrameMeta>;
    detachElement(name: string, jsPath: IJsPath, timestamp: number, waitForElement?: boolean, saveToDb?: boolean): Promise<IDetachedElement[]>;
    createRequest(input: string | number, init?: IRequestInit): Promise<INodePointer>;
    fetch(input: string | number, init?: IRequestInit): Promise<INodePointer>;
    getUrl(): Promise<string>;
    isPaintingStable(): Promise<boolean>;
    isDomContentLoaded(): Promise<boolean>;
    isAllContentLoaded(): Promise<boolean>;
    getCookies(): Promise<ICookie[]>;
    setCookie(name: string, value: string, options?: ISetCookieOptions): Promise<boolean>;
    removeCookie(name: string): Promise<boolean>;
    getChildFrameEnvironment(jsPath: IJsPath): Promise<IFrameMeta>;
    runDomAssertions(id: string, assertions: IDomStateAssertionBatch['assertions']): Promise<number>;
    clearDomAssertions(id: string): Promise<void>;
    runPluginCommand(toPluginId: string, args: any[]): Promise<any>;
    waitForLoad(status: ILoadStatus, options?: IWaitForOptions): Promise<INavigation>;
    waitForLocation(trigger: ILocationTrigger, options?: IWaitForOptions): Promise<IResourceMeta>;
    flushPageEventsRecorder(): Promise<void>;
    onShadowDomPushed(payload: string): Promise<void>;
    onPageRecorderEvents(results: PageRecorderResultSet): boolean;
    toJSON(): IFrameMeta;
    runIsolatedFn<T>(fnName: string, ...args: ISerializable[]): Promise<T>;
    setFileInputFiles(jsPath: IJsPath, files: {
        name: string;
        data: Buffer;
    }[]): Promise<void>;
    addRemoteEventListener(type: keyof FrameEnvironment['EventTypes'], emitFn: IRemoteEmitFn, jsPath?: IJsPath): Promise<{
        listenerId: string;
    }>;
    removeRemoteEventListener(listenerId: string): Promise<any>;
    protected runFn<T>(fnName: string, serializedFn: string): Promise<T>;
    protected install(): Promise<void>;
    private listen;
    private onFrameNavigated;
    private recordNavigationChange;
    private record;
}
