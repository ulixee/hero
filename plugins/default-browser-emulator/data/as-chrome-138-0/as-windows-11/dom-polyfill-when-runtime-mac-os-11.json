{
  "add": [
    {
      "path": "window.Notification.prototype",
      "propertyName": "image",
      "prevProperty": "close",
      "property": {
        "_$flags": "ce",
        "_$accessException": "TypeError: Illegal invocation",
        "_$get": "function get image() { [native code] }",
        "_$getToStringToString": "function toString() { [native code] }"
      }
    }
  ],
  "remove": [
    {
      "path": "window",
      "propertyName": "BarcodeDetector"
    },
    {
      "path": "window.Text.prototype",
      "propertyName": "getDestinationInsertionPoints"
    },
    {
      "path": "window.Element.prototype",
      "propertyName": "createShadowRoot"
    },
    {
      "path": "window.Element.prototype",
      "propertyName": "getDestinationInsertionPoints"
    },
    {
      "path": "window.Document.prototype",
      "propertyName": "registerElement"
    },
    {
      "path": "window",
      "propertyName": "cdc_adoQpoasnfa76pfcZLmcfl"
    },
    {
      "path": "window.HTMLLinkElement.prototype",
      "propertyName": "import"
    }
  ],
  "modify": [
    {
      "path": "window.DOMRectReadOnly.prototype.toJSON",
      "propertyName": "_$otherInvocation.window.viewport.segments.0.toJSON",
      "property": "{x: 0,y: 0,width: 988,height: 605,top: 0,right: 988,bottom: 605,left: 0}"
    },
    {
      "path": "window.PublicKeyCredential.getClientCapabilities",
      "propertyName": "_$invocation",
      "property": "{conditionalCreate: true,conditionalGet: true,extension:appid: true,extension:appidExclude: true,extension:credBlob: true,extension:credProps: true,extension:credentialProtectionPolicy: true,extension:enforceCredentialProtectionPolicy: true,extension:getCredBlob: true,extension:hmacCreateSecret: true,extension:largeBlob: true,extension:minPinLength: true,extension:payment: true,extension:prf: true,hybridTransport: false,passkeyPlatformAuthenticator: false,relatedOrigins: true,signalAllAcceptedCredentials: true,signalCurrentUserDetails: true,signalUnknownCredential: true,userVerifyingPlatformAuthenticator: false}"
    },
    {
      "path": "window.Bluetooth.prototype.getAvailability",
      "propertyName": "_$otherInvocationAsync.window.navigator.bluetooth.getAvailability",
      "property": false
    }
  ],
  "reorder": []
}
