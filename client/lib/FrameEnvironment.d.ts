import { ISuperElement, ISuperNode, ISuperNodeList } from '@ulixee/awaited-dom/base/interfaces/super';
import { IRequestInit } from '@ulixee/awaited-dom/base/interfaces/official';
import SuperDocument from '@ulixee/awaited-dom/impl/super-klasses/SuperDocument';
import Storage from '@ulixee/awaited-dom/impl/official-klasses/Storage';
import CSSStyleDeclaration from '@ulixee/awaited-dom/impl/official-klasses/CSSStyleDeclaration';
import Request from '@ulixee/awaited-dom/impl/official-klasses/Request';
import { ILoadStatus, ILocationTrigger } from '@ulixee/unblocked-specification/agent/browser/Location';
import IWaitForElementOptions from '@ulixee/hero-interfaces/IWaitForElementOptions';
import Response from '@ulixee/awaited-dom/impl/official-klasses/Response';
import IWaitForOptions from '@ulixee/hero-interfaces/IWaitForOptions';
import { IElementIsolate, IHTMLFrameElementIsolate, IHTMLIFrameElementIsolate, IHTMLObjectElementIsolate, INodeIsolate } from '@ulixee/awaited-dom/base/interfaces/isolate';
import { INodeVisibility } from '@ulixee/js-path';
import { IMousePositionXY } from '@ulixee/unblocked-specification/agent/interact/IInteractions';
import CookieStorage from './CookieStorage';
import Hero from './Hero';
import CoreFrameEnvironment from './CoreFrameEnvironment';
import Tab from './Tab';
import Resource from './Resource';
import { InternalPropertiesSymbol } from './internal';
interface ISharedInternalProperties {
    coreFramePromise: Promise<CoreFrameEnvironment>;
}
export default class FrameEnvironment {
    #private;
    get [InternalPropertiesSymbol](): ISharedInternalProperties;
    constructor(hero: Hero, tab: Tab, coreFramePromise: Promise<CoreFrameEnvironment>);
    get isMainFrame(): Promise<boolean>;
    get frameId(): Promise<number>;
    get children(): Promise<FrameEnvironment[]>;
    get url(): Promise<string>;
    get isPaintingStable(): Promise<boolean>;
    get isDomContentLoaded(): Promise<boolean>;
    get isAllContentLoaded(): Promise<boolean>;
    get name(): Promise<string>;
    get parentFrameId(): Promise<number | null>;
    get cookieStorage(): CookieStorage;
    get document(): SuperDocument;
    get localStorage(): Storage;
    get sessionStorage(): Storage;
    get Request(): typeof Request;
    fetch(request: Request | string, init?: IRequestInit): Promise<Response>;
    getFrameEnvironment(element: IHTMLFrameElementIsolate | IHTMLIFrameElementIsolate | IHTMLObjectElementIsolate): Promise<FrameEnvironment | null>;
    getComputedStyle(element: IElementIsolate, pseudoElement?: string): CSSStyleDeclaration;
    getComputedVisibility(node: INodeIsolate): Promise<INodeVisibility>;
    isElementVisible(element: IElementIsolate): Promise<boolean>;
    getJsValue<T>(path: string): Promise<T>;
    querySelector(selector: string): ISuperNode;
    querySelectorAll(selector: string): ISuperNodeList;
    xpathSelector(xpath: string, orderedNodeResults?: boolean): ISuperNode;
    xpathSelectorAll(xpath: string, orderedNodeResults?: boolean): Promise<ISuperNode[]>;
    waitForPaintingStable(options?: IWaitForOptions): Promise<void>;
    waitForLoad(status: ILoadStatus, options?: IWaitForOptions): Promise<void>;
    waitForElement(element: ISuperElement, options?: IWaitForElementOptions): Promise<ISuperElement | null>;
    waitForLocation(trigger: ILocationTrigger, options?: IWaitForOptions): Promise<Resource>;
    toJSON(): any;
}
export declare function getCoreFrameEnvironmentForPosition(mousePosition: IMousePositionXY | ISuperElement): Promise<CoreFrameEnvironment>;
export declare function createFrame(hero: Hero, tab: Tab, coreFrame: Promise<CoreFrameEnvironment>): FrameEnvironment;
export {};
